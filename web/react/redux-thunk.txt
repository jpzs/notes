redux-thunk    2.2.0


/*
源代码很短,所以直接贴出来
thunk 需要作为中间件数组中的第一个
在 redux 的 store.dispatch 中,currentState 是即时生成的
若碰到异步请求,则不能直接 dispatch,这时需要 Action Creator（动作生成器） 在取到数据生成 action 以后回调 dispatch,
thunk 判断 action 为函数也就是 Action Creator 时,对 Action Creator 进行过滤,
将 dispatch 传递给 Action Creator,当 Action Creator 取到数据以后回调 dispatch,
会开启中间件调用和 store.dispatch 的过程,
会再一次调用该函数,然后 next 串联下去 
*/
exports.__esModule = true;
function createThunkMiddleware(extraArgument) {
  return function (_ref) {
	//_ref 对象为 redux.applyMiddleware 当中封装后的对象,_ref.dispatch 是封装起来的中间件调用的函数
    var dispatch = _ref.dispatch,
        getState = _ref.getState;
    return function (next) {
	  //next 为下一个中间件调用函数
      return function (action) {
        if (typeof action === 'function') {
          return action(dispatch, getState, extraArgument);
        }

        return next(action);
      };
    };
  };
}

var thunk = createThunkMiddleware();
thunk.withExtraArgument = createThunkMiddleware;

exports['default'] = thunk;