npm init 初始化,生成package.json文件
npm install <package> 安装npm包,不带参数安装的话,包信息不会出现在package.json中
参数
-g				在全局环境下安装,可直接在命令行使用
--verbose	   显示当前模块安装进度
-f或--force    不管是否安装过,都要强制重新安装
--save或-S		安装后会在package.json的dependencies添加包的信息,表示运行时依赖
--save-dev或-D  安装后会在package.json的devDependencies添加包的信息,表示开发时依赖

npm install 默认会下载dependencies和devDependencies中所有的模块，当使用npm install –production或者注明NODE_ENV变量值为production时，只会下载dependencies中的模块。

npm uninstall <package> 卸载包
npm update <package> 更新包

registry
npm模块仓库提供了一个查询服务，叫做 registry 。以 npmjs.org 为例，它的查询服务网址是 https://registry.npmjs.org/ 。
这个网址后面跟上模块名，就会得到一个 JSON 对象，里面是该模块所有版本的信息。比如，访问 https://registry.npmjs.org/react
它跟下面命令的效果是一样的。npm view react
registry网址的模块名后面，还可以跟上版本号或者标签，用来查询某个具体版本的信息。比如， 访问 https://registry.npmjs.org/react/v0.14.6 ，就可以看到 React 的 0.14.6 版
返回的 JSON 对象里面，有一个dist.tarball属性，是该版本压缩包的网址。

缓存目录
在 Linux 或 Mac 默认是用户主目录下的.npm目录，在 Windows 默认是%AppData%/npm-cache。通过配置命令，可以查看这个目录的具体位置
$ npm config get cache
$HOME/.npm

package.json中scripts属性中保存命令,通过命令行npm run <key>来执行命令,如
"scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "build": "webpack-dev-server --inline"
}
运行 npm run build 来执行命令 webpack-dev-server --inline

安装cnpm 淘宝NPM镜像,可提升下载速度,使用cnpm的命令替代npm,如cnpm install
npm install -g cnpm --registry=http://r.cnpmjs.org
也可以直接修改registry地址来实现同样的效果,打开Node安装目录然后进入NPM项目目录。例如我Node安装到了D盘，因此路径为：D:\Program Files\nodejs\node_modules\npm
在NPM项目根目录中找到npmrc文件,替换内容为registry=https://registry.npm.taobao.org 
通过 config 配置指定下载源  npm config set registry https://registry.npm.taobao.org

npm官网文档 https://docs.npmjs.com